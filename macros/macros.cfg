# Macros
[gcode_macro ECHO_PRESSURE_ADV_VALUES]
description: Echo RatOS variables to the console.
gcode:
	{% for var, value in printer["gcode_macro PRESSURE_ADV_VALUES"].items() %}
		{action_respond_info(var ~ ": " ~ value)}
	{% endfor %}

[gcode_macro PRESSURE_ADV_VALUES]
variable_default: 0.05
variable_cf_pc: 0.0
variable_pm_cf_pc: 0
variable_pc: 0
gcode:
    ECHO_PRESSURE_ADV_VALUES

[gcode_macro G29]
gcode:
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1

[gcode_macro PRIME_LINE]
gcode:
    G1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed

[gcode_macro START_PRINT]
gcode:
    SAVE_GCODE_STATE NAME=start_print_state
    G21 ;metric values
    G90 ;absolute positioning
    M82 ;set extruder to absolute mode
    M117 Heating...
    M140 S{params.BED_TEMP|default(printer.heater_bed.target, true) } ; heat bed
    M104 S150 ; heat extruder to 150 for probing
    M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) } ; wait for bed to heat up
    M109 S150 ; wait extruder to heat up to 150 before probing
    FIX_XY_SKEW
    G28 ;home
    BED_MESH_CALIBRATE ADAPTIVE=1 ; Calibrate bed mesh
    M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) } ; wait for extruder to heat up
    M117 Printing...
    {% set filament_type = params.FILAMENT_TYPE|default('default') %}
    AUTOSELECT_PRESSURE_ADV FILAMENT_TYPE='{filament_type}'
    RESTORE_GCODE_STATE NAME=start_print_state
    M82
    G92 E0

[gcode_macro END_PRINT]
gcode:
    G1 Y190 F1500; bring Y up front 
    G10 ; set tool offset?  or retract?
    G91; Relative Positioning
    G1 Z+10; Move Z up so it doesn't hit anything
    G1 E-10 F300; Retrack-10
    G90; Absolute Positioning
    G1 X10 Y220 F2000; Move to X10, Y220
    M104 S0; Turn off Extrude (set it to 0)
    M140 S0; Turn off Bed (set it to 0)
    M106 S0; turn off cooling fan
    M84; Disable steppers


[gcode_macro START_PRINT_NO_ABL]
gcode:
    G28; Home all axes
    G92 E0; Reset Extruder
    G1 Z5.0 F3000; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y20 Z0.3 F5000.0; Move to start position
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15; Draw the first line
    G1 X0.4 Y200.0 Z0.3 F5000.0; Move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30; Draw the second line
    G92 E0; Reset Extruder
    G1 Z5.0 F3000; Move Z Axis up little to prevent scratching of Heat Bed

[gcode_macro PID_TUNE_EXT]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET={params.TEMP|default(240, true)}

[gcode_macro PID_TUNE_BED]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET={params.TEMP|default(65, true)}

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="Printer",
                             state="off")}

[gcode_macro POWER_OFF_ON_COOLING]
gcode:
  M190 S45
  M109 S60
  {action_call_remote_method("set_device_power",
                             device="Printer",
                             state="off")}

[gcode_macro AUTOSELECT_PRESSURE_ADV]
gcode:
    {% set filament_type = params.FILAMENT_TYPE|default('default')|string|lower %}
    {% if filament_type in printer["gcode_macro PRESSURE_ADV_VALUES"].keys() %}
    {% set pressure_advance = printer["gcode_macro PRESSURE_ADV_VALUES"].get(filament_type)|float %}
    {% else %}
    {% set pressure_advance = printer["gcode_macro PRESSURE_ADV_VALUES"].default|float %}
    {% endif %}
    SET_PRESSURE_ADVANCE ADVANCE={pressure_advance}

[gcode_macro FIX_XY_SKEW]
gcode:
    SET_SKEW XY=99.53,100,70.545

[gcode_shell_command GIT_PUSH_CONFIGS_CMD]
command: /home/gurbakhshish/printer_1_data/config/ender3_klipper_setup/push_changes.sh
verbose: True

[gcode_macro GIT_PUSH_CONFIGS]
description: Push user configs to git repo
gcode:
    RUN_SHELL_COMMAND CMD=GIT_PUSH_CONFIGS_CMD